<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on</title><link>https://dyong1.github.io/blog/</link><description>Recent content in Blogs on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 30 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://dyong1.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Practical Domain-Driven Development in your code</title><link>https://dyong1.github.io/blog/2020/04/30/practical-domain-driven-development-in-your-code/</link><pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate><guid>https://dyong1.github.io/blog/2020/04/30/practical-domain-driven-development-in-your-code/</guid><description>There are many models in every business-purposed application. For example, a shop&amp;#x2019;s website selling products can have models such as customer, product, order, and delivery. To derive those models, we often imagine how the shop&amp;#x2019;s website will work.
TBD</description></item><item><title>Domain-Driven Development in real world</title><link>https://dyong1.github.io/blog/2020/04/29/domain-driven-development-in-real-world/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><guid>https://dyong1.github.io/blog/2020/04/29/domain-driven-development-in-real-world/</guid><description>Reading several books and articles about Domain-Driven Development (DDD), I&amp;#x2019;ve felt that DDD is quite hard to apply to the real world. Because it requires strong consensuses between people working together. So I&amp;#x2019;ve wanted to turn DDD into something that we can physically see. Here&amp;#x2019;s how I did.
DDD&amp;#x2019;s core is composed of:
ContextsContextual boundaries
Because they define domains. A domain is a set of perceptions of a thing and use cases, which are derived by a context and its boundaries to the related contexts.</description></item><item><title>My website is running</title><link>https://dyong1.github.io/blog/2020/04/29/my-website-is-running/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><guid>https://dyong1.github.io/blog/2020/04/29/my-website-is-running/</guid><description>I didn&amp;#x2019;t want to spend long hours on making this website&amp;#xA0;to have my blog. Here&amp;#x2019;s the result and it&amp;#x2019;s just working fine.</description></item><item><title>The blog system that I wrote</title><link>https://dyong1.github.io/blog/2020/04/29/the-blog-system-that-i-wrote/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><guid>https://dyong1.github.io/blog/2020/04/29/the-blog-system-that-i-wrote/</guid><description>Since I didn&amp;#x2019;t want to make the blog system quickly, I made a simple pipeline that delivers my blog postings in a Google Docs document to my website. Here&amp;#x2019;s the architecture I have so far:</description></item><item><title>Blog posting topics</title><link>https://dyong1.github.io/blog/2020/04/27/blog-posting-topics/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://dyong1.github.io/blog/2020/04/27/blog-posting-topics/</guid><description>I want to write some blog postings about:
Practical DDDFocusing on values and goalsProjects for building a productSpecifications of a product and systemRequirements and specificationsMeasuring a product&amp;#x2019;s qualitiesWorking as a teamAll for one is not One for allMaking a decision and responsibilityRoles in a development teamDevelopment is not engineeringCoding is not everything that a software engineer doesDocumentationEfficient communication for WFHMisunderstanding about PMsWhat I want from my managers as a member of the organization</description></item><item><title>Minimal implementation of the blog system</title><link>https://dyong1.github.io/blog/2020/04/26/minimal-implementation-of-the-blog-system/</link><pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate><guid>https://dyong1.github.io/blog/2020/04/26/minimal-implementation-of-the-blog-system/</guid><description>Yesterday, I wrote a working version of the blog system, which meets:
[MUST] Want to write blog posts anywhere via a Google Docs document[MUST] Want to view blog posts on my website[Optional] Want to have a separate URI for each blog posting[Optional] Want to search my website for a specific blog post with a keyword
However, the blog was pretty unpleasant as the spec was very minimal. See here:</description></item><item><title>Designing a blog system with Google Docs</title><link>https://dyong1.github.io/blog/2020/04/25/designing-a-blog-system-with-google-docs/</link><pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate><guid>https://dyong1.github.io/blog/2020/04/25/designing-a-blog-system-with-google-docs/</guid><description>Requirements[MUST] Want to write blog posts anywhere via a Google Docs document[MUST] Want to view blog posts on my website[Optional] Want to have a separate URI for each blog posting[Optional] Want to search my website for a specific blog post with a keyword
Design1: Static website with a Google Docs doc embeddedJust embed a Google Docs document into a web page and publish it.
Design2: Website with a page per blog postingAssumptions:</description></item></channel></rss>